version: '3.8'

services:
  # MLflow Server
  mlflow:
    build: ./mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlflow-data:/mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    networks:
      - ml-network
    depends_on:
      - minio
      - postgres-mlflow

  # MinIO for artifact storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - ml-network

  # Postgres for MLflow backend
  postgres-mlflow:
    image: postgres:13
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    volumes:
      - postgres-mlflow-data:/var/lib/postgresql/data
    networks:
      - ml-network

  # FastAPI Application
  api:
    build: ./api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - model-data:/models
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MODEL_PATH=/models/yolov11_cxr.onnx
    networks:
      - ml-network
    depends_on:
      - mlflow

  # Prometheus for monitoring
  prometheus:
    build: ./monitoring/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ml-network
    depends_on:
      - api

  # Grafana for visualization
  grafana:
    build: ./monitoring/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - ml-network
    depends_on:
      - prometheus

networks:
  ml-network:
    driver: bridge

volumes:
  mlflow-data:
  minio-data:
  postgres-mlflow-data:
  model-data:
  grafana-data: